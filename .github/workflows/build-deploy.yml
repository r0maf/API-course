name: Build and deploy code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing
    env:
      DB_HOSTNAME: ${{secrets.DB_HOSTNAME}}
      DB_PORT:  ${{secrets.DB_PORT}}
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      DB_NAME: ${{secrets.DB_NAME}}
      DB_USERNAME: ${{secrets.DB_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}
          POSTGRES_DB: ${{secrets.DB_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest      
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: run pytest
        run: |
          pip install pytest
          pytest -s
      
      # - name: docker login
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{secrets.DOCKER_HUB_USERNAME}}
      #     password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
    
      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1
      
      # - name: Check files
      #   run: ls -la
      
      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./
      #     file: ./DockerFile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/api-course:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache
      
      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    environment:
      name: production
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    steps:
      - name: pulling github repo
        uses: actions/checkout@v2
      - name: deploying to Render
        uses: JorgeLNJunior/render-deploy@v1.4.5
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
          clear_cache: true
          wait_deploy: true
          github_deployment: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: deploying to ubuntu server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          password: ${{ secrets.VM_PASSWORD }}
          script: |
            cd app/src
            git pull
            sudo systemctl restart api
